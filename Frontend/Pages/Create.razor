@page "/create-table"
@using Shared.DTOs
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="mt-5 container">
    <h2>Create Dynamic Table</h2>
    <form @onsubmit="CreateTableAsync">
        <div class="form-group mb-3">
            <label for="tableName">Table Name</label>
            <input type="text" class="form-control" id="tableName" placeholder="Enter table name"
                   @bind="tableDto.TableName" required>
        </div>

        @foreach (var column in tableDto.Columns)
        {
            @if (column.Name != "Id") // Id sütununu gösterme
            {
                <div class="card my-3">
                    <div class="card-body">
                        <h5 class="card-title">Column @column.Name</h5>

                        <div class="form-group">
                            <label>Column Name</label>
                            <input type="text" class="form-control" placeholder="Enter column name"
                                   @bind="column.Name" required>
                        </div>

                        <div class="form-group">
                            <label>Data Type</label>
                            <select class="form-select" @bind="column.DataType">
                                @foreach (var dataType in dataTypes)
                                {
                                    <option value="@dataType">@dataType</option>
                                }
                            </select>
                        </div>

                        <button type="button" class="btn btn-danger mt-2"
                                @onclick="() => RemoveColumn(column)">
                            Remove Column
                        </button>
                    </div>
                </div>
            }
        }

        <button type="button" class="btn btn-outline-primary" @onclick="AddColumn">Add Column</button>
        <button type="submit" class="btn btn-primary">Create Table</button>
    </form>
</div>

@code {
    private CreateTableDto tableDto = new()
        {
            TableName = "",
            Columns = new List<CreateColumnDto>()
        };

    private readonly string[] dataTypes = new[] { "string", "int", "decimal", "datetime", "bool" };

    private void AddColumn()
    {
        tableDto.Columns.Add(new CreateColumnDto { Name = "", DataType = "string", IsPrimaryKey = false });
    }

    private void RemoveColumn(CreateColumnDto column)
    {
        tableDto.Columns.Remove(column);
    }

    private async Task CreateTableAsync()
    {
        // Gizli Id sütunu
        tableDto.Columns.Add(new CreateColumnDto { Name = "Id", DataType = "int", IsPrimaryKey = true });

        // API çağrısı için tablo oluşturma
        var response = await Http.PostAsJsonAsync("https://localhost:5002/api/DynamicTable", tableDto);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/tables");
        }
        else
        {
            Console.WriteLine("Table creation failed.");
        }
    }
}
